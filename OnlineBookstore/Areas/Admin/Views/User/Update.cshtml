@model OnlineBookstore.Models.Users

@{
    ViewBag.Title = "Update";
    Layout = "~/Areas/Admin/Views/Shared/_Layout.cshtml";
}

@section contentHeader {
    Chi tiết người dùng
}

<!-- Default box -->
<div class="card">
    <div class="card-header">
        <h3 class="card-title">Thông tin chi tiết về @Model.FullName</h3>

        <div class="card-tools">
            <button type="button" class="btn btn-tool" data-card-widget="collapse" data-toggle="tooltip" title="Collapse">
                <i class="fas fa-minus"></i>
            </button>
            <button type="button" class="btn btn-tool" data-card-widget="remove" data-toggle="tooltip" title="Remove">
                <i class="fas fa-times"></i>
            </button>
        </div>
    </div>
    <div class="card-body">
        @using (Html.BeginForm())
        {
            @Html.AntiForgeryToken()

            <div class="form-horizontal">
                @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                @Html.HiddenFor(model => model.Id)

                <div class="form-group">
                    @Html.LabelFor(model => model.FullName, htmlAttributes: new { @class = "control-label col-md-12" })
                    <div class="col-md-12">
                        @Html.TextBoxFor(model => model.FullName, new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.FullName, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Username, htmlAttributes: new { @class = "control-label col-md-12" })
                    <div class="col-md-12">
                        @Html.EditorFor(model => model.Username, new { htmlAttributes = new { @class = "form-control", @disabled = "disabled" } })
                        @Html.ValidationMessageFor(model => model.Username, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Password, htmlAttributes: new { @class = "control-label col-md-12" })
                    <div class="col-md-12">
                        @Html.PasswordFor(model => model.Password, new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.Password, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Email, htmlAttributes: new { @class = "control-label col-md-12" })
                    <div class="col-md-12">
                        @Html.TextBoxFor(model => model.Email, new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Gender, htmlAttributes: new { @class = "control-label col-md-12" })
                    <div class="col-md-12">
                        <div class="checkbox">
                            @{
                                List<SelectListItem> gender = new List<SelectListItem>();
                                SelectListItem female = new SelectListItem() { Text = "Nữ", Value = "False" };
                                SelectListItem male = new SelectListItem() { Text = "Nam", Value = "True" };
                                gender.Add(female);
                                gender.Add(male);
                            }
                            @Html.DropDownListFor(model => model.Gender, gender, new { @class = "form-control" })
                            @Html.ValidationMessageFor(model => model.Gender, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Address, htmlAttributes: new { @class = "control-label col-md-12" })
                    <div class="col-md-12">
                        @Html.TextAreaFor(model => model.Address, new { @class = "form-control", @rows = "2" })
                        @Html.ValidationMessageFor(model => model.Address, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.PhoneNumber, htmlAttributes: new { @class = "control-label col-md-12" })
                    <div class="col-md-12">
                        @Html.TextBoxFor(model => model.PhoneNumber, new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.PhoneNumber, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Authorization, htmlAttributes: new { @class = "control-label col-md-12" })
                    <div class="col-md-12">
                        @{
                            List<SelectListItem> authorization = new List<SelectListItem>();
                            SelectListItem admin = new SelectListItem() { Text = "Quản trị viên", Value = "1" };
                            SelectListItem customer = new SelectListItem() { Text = "Khách hàng", Value = "2" };
                            authorization.Add(admin);
                            authorization.Add(customer);
                        }
                        @Html.DropDownListFor(model => model.Authorization, authorization, new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.Authorization, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.CreatedDate, htmlAttributes: new { @class = "control-label col-md-12" })
                    <div class="col-md-12">
                        @Html.EditorFor(model => model.CreatedDate, new { htmlAttributes = new { @class = "form-control", @disabled = "disabled" } })
                        @Html.ValidationMessageFor(model => model.CreatedDate, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.CreatedBy, htmlAttributes: new { @class = "control-label col-md-12" })
                    <div class="col-md-12">
                        @Html.EditorFor(model => model.CreatedBy, new { htmlAttributes = new { @class = "form-control", @disabled = "disabled" } })
                        @Html.ValidationMessageFor(model => model.CreatedBy, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.ModifiedDate, htmlAttributes: new { @class = "control-label col-md-12" })
                    <div class="col-md-12">
                        @Html.EditorFor(model => model.ModifiedDate, new { htmlAttributes = new { @class = "form-control", @disabled = "disabled" } })
                        @Html.ValidationMessageFor(model => model.ModifiedDate, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.ModifiedBy, htmlAttributes: new { @class = "control-label col-md-12" })
                    <div class="col-md-12">
                        @Html.EditorFor(model => model.ModifiedBy, new { htmlAttributes = new { @class = "form-control", @disabled = "disabled" } })
                        @Html.ValidationMessageFor(model => model.ModifiedBy, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Status, htmlAttributes: new { @class = "control-label col-md-12" })
                    <div class="col-md-12">
                        @{
                            List<SelectListItem> status = new List<SelectListItem>();
                            SelectListItem active = new SelectListItem() { Text = "Hoạt động", Value = "1" };
                            SelectListItem inactive = new SelectListItem() { Text = "Chưa hoạt động", Value = "2" };
                            status.Add(active);
                            status.Add(inactive);
                        }
                        @Html.DropDownListFor(model => model.Status, status, new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.Status, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    <div class="col-md-offset-2 col-md-12">
                        <input type="submit" value="Save" class="btn btn-default float-right" />
                    </div>
                </div>
            </div>
        }
    </div>
    <!-- /.card-body -->
    <div class="card-footer">
        Footer
    </div>
    <!-- /.card-footer-->
</div>
<!-- /.card -->

<div>
    @Html.ActionLink("Back to List", "Index")
</div>
